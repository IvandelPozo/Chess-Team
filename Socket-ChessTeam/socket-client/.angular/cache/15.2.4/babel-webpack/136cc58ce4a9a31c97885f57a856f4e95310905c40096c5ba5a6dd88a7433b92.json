{"ast":null,"code":"import { Equip } from '../../Model/Entitats/Implementations/Equip';\nimport { Jugador } from '../../Model/Entitats/Implementations/Jugador';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nexport class ChessService {\n  // Crear variable socket\n  constructor(socket) {\n    this.socket = socket;\n  }\n  addTeam(teamName, member1, member2) {\n    let equip = new Equip(teamName, [new Jugador(member1), new Jugador(member2)]);\n    this.socket.emit('newTeam', equip);\n  }\n  assignTeamMember() {\n    this.socket.emit('assignTeamMember');\n  }\n  getErrorDuplicated() {\n    return this.socket.fromEvent('equipDuplicated');\n  }\n  getTeamMember() {\n    return this.socket.fromEvent('assignedMember');\n  }\n  startGame() {\n    return this.socket.fromEvent('startGame');\n  }\n  rebreMoviment() {\n    return this.socket.fromEvent('movemPeca');\n  }\n  movimentPeca(moviment) {\n    this.socket.emit('mourePeca', moviment);\n  }\n}\nChessService.ɵfac = function ChessService_Factory(t) {\n  return new (t || ChessService)(i0.ɵɵinject(i1.Socket));\n};\nChessService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChessService,\n  factory: ChessService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,KAAK,QAAQ,4CAA4C;AAElE,SAASC,OAAO,QAAQ,8CAA8C;;;AAMtE,OAAM,MAAOC,YAAY;EAEvB;EACAC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtCC,OAAOA,CAACC,QAAgB,EAAEC,OAAe,EAAEC,OAAe;IAExD,IAAIC,KAAK,GAAG,IAAIT,KAAK,CAACM,QAAQ,EAAE,CAAC,IAAIL,OAAO,CAACM,OAAO,CAAC,EAAE,IAAIN,OAAO,CAACO,OAAO,CAAC,CAAC,CAAC;IAC7E,IAAI,CAACJ,MAAM,CAACM,IAAI,CAAC,SAAS,EAAED,KAAK,CAAC;EACpC;EAEAE,gBAAgBA;IACd,IAAI,CAACP,MAAM,CAACM,IAAI,CAAC,kBAAkB,CAAC;EACtC;EAEAE,kBAAkBA;IAChB,OAAO,IAAI,CAACR,MAAM,CAACS,SAAS,CAAS,iBAAiB,CAAC;EACzD;EAEAC,aAAaA;IACX,OAAO,IAAI,CAACV,MAAM,CAACS,SAAS,CAAc,gBAAgB,CAAC;EAC7D;EAEAE,SAASA;IACP,OAAO,IAAI,CAACX,MAAM,CAACS,SAAS,CAAC,WAAW,CAAC;EAC3C;EAEAG,aAAaA;IACX,OAAO,IAAI,CAACZ,MAAM,CAACS,SAAS,CAAW,WAAW,CAAC;EACrD;EAEAI,YAAYA,CAACC,QAAkB;IAC7B,IAAI,CAACd,MAAM,CAACM,IAAI,CAAC,WAAW,EAAEQ,QAAQ,CAAC;EACzC;;AAjCWhB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAiB,SAAZjB,YAAY;EAAAkB,YAFX;AAAM","names":["Equip","Jugador","ChessService","constructor","socket","addTeam","teamName","member1","member2","equip","emit","assignTeamMember","getErrorDuplicated","fromEvent","getTeamMember","startGame","rebreMoviment","movimentPeca","moviment","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\juaca\\OneDrive\\Escriptori\\2DAW\\ANGULAR\\Socket-ChessTeam\\socket-client\\src\\app\\Projecte\\Serveis\\Chess\\chess.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { Observable } from 'rxjs';\nimport { Equip } from '../../Model/Entitats/Implementations/Equip';\nimport { InfoJugador } from '../../Model/Entitats/Implementations/InfoJugador';\nimport { Jugador } from '../../Model/Entitats/Implementations/Jugador';\nimport { Moviment } from '../../Model/Entitats/Implementations/Moviment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChessService {\n\n  // Crear variable socket\n  constructor(private socket: Socket) { }\n\n  addTeam(teamName: string, member1: string, member2: string): void {\n\n    let equip = new Equip(teamName, [new Jugador(member1), new Jugador(member2)]);\n    this.socket.emit('newTeam', equip);\n  }\n\n  assignTeamMember(): void {\n    this.socket.emit('assignTeamMember');\n  }\n\n  getErrorDuplicated(): Observable<string> {\n    return this.socket.fromEvent<string>('equipDuplicated');\n  }\n\n  getTeamMember(): Observable<InfoJugador> {\n    return this.socket.fromEvent<InfoJugador>('assignedMember');\n  }\n\n  startGame(): any {\n    return this.socket.fromEvent('startGame');\n  }\n\n  rebreMoviment(): Observable<Moviment> {\n    return this.socket.fromEvent<Moviment>('movemPeca');\n  }\n\n  movimentPeca(moviment: Moviment): void {\n    this.socket.emit('mourePeca', moviment);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}