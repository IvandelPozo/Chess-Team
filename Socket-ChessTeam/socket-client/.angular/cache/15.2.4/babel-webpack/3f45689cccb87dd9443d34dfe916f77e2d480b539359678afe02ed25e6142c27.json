{"ast":null,"code":"import { IMG } from \"src/app/Projecte/Utils/img\";\nimport { Casella } from \"./Casella\";\nimport { Peça } from \"./Peça\";\nexport class Taulell {\n  constructor() {\n    this.lletres = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n    this.numeros = [\"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"];\n    this.pecesMortes = [];\n    this.lluitadors = [];\n    this.pecesMortes[0] = new Array();\n    this.pecesMortes[1] = new Array();\n    this.torn = 0;\n    this.emplenarCaselles();\n    this.posarPeces();\n  }\n  emplenarCaselles() {\n    let caselles = new Array();\n    let color = \"blanc\";\n    for (let i = 0; i < 8; i++) {\n      let fila = new Array();\n      for (let j = 0; j < 8; j++) {\n        let casella = new Casella(i, j, color, null);\n        fila.push(casella);\n        color = color == \"blanc\" ? \"negre\" : \"blanc\";\n      }\n      caselles.push(fila);\n      color = color == \"blanc\" ? \"negre\" : \"blanc\";\n    }\n    this.caselles = caselles;\n  }\n  posarPeces() {\n    // Torre negra\n    let peca = new Peça(\"Torre\", \"negre\", \"./assets/Imatges/\" + IMG[6].n_tower);\n    this.caselles[0][0].peca = peca;\n    this.caselles[0][7].peca = peca;\n    // Cavall negre\n    peca = new Peça(\"Cavall\", \"negre\", \"./assets/Imatges/\" + IMG[7].n_horse);\n    this.caselles[0][1].peca = peca;\n    this.caselles[0][6].peca = peca;\n    // Alfil negre\n    peca = new Peça(\"Alfil\", \"negre\", \"./assets/Imatges/\" + IMG[8].n_bishop);\n    this.caselles[0][2].peca = peca;\n    this.caselles[0][5].peca = peca;\n    // Reina negra\n    peca = new Peça(\"Reina\", \"negre\", \"./assets/Imatges/\" + IMG[9].n_queen);\n    this.caselles[0][3].peca = peca;\n    // Rei negre\n    peca = new Peça(\"Rei\", \"negre\", \"./assets/Imatges/\" + IMG[10].n_king);\n    this.caselles[0][4].peca = peca;\n    // Peó negre\n    for (let i = 0; i < 8; i++) {\n      let peça = new Peça(\"Peó\", \"negre\", \"./assets/Imatges/\" + IMG[11].n_pawn);\n      this.caselles[1][i].peca = peça;\n    }\n    // Torre blanca\n    peca = new Peça(\"Torre\", \"blanc\", \"./assets/Imatges/\" + IMG[0].b_tower);\n    this.caselles[7][0].peca = peca;\n    this.caselles[7][7].peca = peca;\n    // Cavall blanc\n    peca = new Peça(\"Cavall\", \"blanc\", \"./assets/Imatges/\" + IMG[1].b_horse);\n    this.caselles[7][1].peca = peca;\n    this.caselles[7][6].peca = peca;\n    // Alfil blanc\n    peca = new Peça(\"Alfil\", \"blanc\", \"./assets/Imatges/\" + IMG[2].b_bishop);\n    this.caselles[7][2].peca = peca;\n    this.caselles[7][5].peca = peca;\n    // Reina blanca\n    peca = new Peça(\"Reina\", \"blanc\", \"./assets/Imatges/\" + IMG[3].b_queen);\n    this.caselles[7][3].peca = peca;\n    // Rei blanc\n    peca = new Peça(\"Rei\", \"blanc\", \"./assets/Imatges/\" + IMG[4].b_king);\n    this.caselles[7][4].peca = peca;\n    // Peó blanc\n    for (let i = 0; i < 8; i++) {\n      let peça = new Peça(\"Peó\", \"blanc\", \"./assets/Imatges/\" + IMG[5].b_pawn);\n      this.caselles[6][i].peca = peça;\n    }\n  }\n  static rotate() {\n    let taulellRotate = new Taulell();\n    taulellRotate.caselles.reverse();\n    for (let i = 0; i < taulellRotate.caselles.length; i++) {\n      taulellRotate.caselles[i].reverse();\n    }\n    taulellRotate.lletres.reverse();\n    taulellRotate.numeros.reverse();\n    return taulellRotate;\n  }\n}","map":{"version":3,"mappings":"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","names":["IMG","Casella","Peça","Taulell","constructor","pecesMortes","Array","torn","emplenarCaselles","posarPeces","caselles","color","i","fila","j","casella","push","peca","n_tower","n_horse","n_bishop","n_queen","n_king","peça","n_pawn","b_tower","b_horse","b_bishop","b_queen","b_king","b_pawn","rotate","taulellRotate","reverse","length","lletres","numeros"],"sourceRoot":"","sources":["C:\\Users\\juaca\\OneDrive\\Escriptori\\2DAW\\ANGULAR\\Socket-ChessTeam\\socket-client\\src\\app\\Projecte\\Model\\Entitats\\Implementations\\Taulell.ts"],"sourcesContent":["import { IMG } from \"src/app/Projecte/Utils/img\";\r\nimport { IPeça } from \"../Interfaces/IPeça\";\r\nimport { ITaulell } from \"../Interfaces/ITaulell\";\r\nimport { Casella } from \"./Casella\";\r\nimport { Jugador } from \"./Jugador\";\r\nimport { Peça } from \"./Peça\";\r\n\r\nexport class Taulell implements ITaulell {\r\n    caselles!: Array<Array<Casella>>;\r\n    lletres: Array<string> = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\r\n    numeros: Array<string> = [\"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"];\r\n    pecesMortes: Array<Array<Peça>> = [];\r\n    lluitadors: Array<Jugador> = [];\r\n    torn!: number;\r\n\r\n    constructor() {\r\n        this.pecesMortes[0] = new Array<Peça>();\r\n        this.pecesMortes[1] = new Array<Peça>();\r\n        this.torn = 0;\r\n        this.emplenarCaselles();\r\n        this.posarPeces();\r\n    }\r\n\r\n    emplenarCaselles(): void {\r\n        let caselles: Array<Array<Casella>> = new Array<Array<Casella>>();\r\n        let color: string = \"blanc\";\r\n        for (let i = 0; i < 8; i++) {\r\n            let fila: Array<Casella> = new Array<Casella>();\r\n            for (let j = 0; j < 8; j++) {\r\n                let casella: Casella = new Casella(i, j, color, null);\r\n                fila.push(casella);\r\n                color = color == \"blanc\" ? \"negre\" : \"blanc\";\r\n            }\r\n            caselles.push(fila);\r\n            color = color == \"blanc\" ? \"negre\" : \"blanc\";\r\n        }\r\n        this.caselles = caselles;\r\n    }\r\n \r\n    posarPeces(): void {\r\n\r\n        // Torre negra\r\n        let peca: Peça = new Peça(\"Torre\", \"negre\", \"./assets/Imatges/\" + IMG[6].n_tower);\r\n        this.caselles[0][0].peca = peca;\r\n        this.caselles[0][7].peca = peca;\r\n\r\n        // Cavall negre\r\n        peca = new Peça(\"Cavall\", \"negre\", \"./assets/Imatges/\" + IMG[7].n_horse);\r\n        this.caselles[0][1].peca = peca;\r\n        this.caselles[0][6].peca = peca;\r\n\r\n        // Alfil negre\r\n        peca = new Peça(\"Alfil\", \"negre\", \"./assets/Imatges/\" + IMG[8].n_bishop);\r\n        this.caselles[0][2].peca = peca;\r\n        this.caselles[0][5].peca = peca;\r\n\r\n        // Reina negra\r\n        peca = new Peça(\"Reina\", \"negre\", \"./assets/Imatges/\" + IMG[9].n_queen);\r\n        this.caselles[0][3].peca = peca;\r\n\r\n        // Rei negre\r\n        peca = new Peça(\"Rei\", \"negre\", \"./assets/Imatges/\" + IMG[10].n_king);\r\n        this.caselles[0][4].peca = peca;\r\n\r\n        // Peó negre\r\n        for (let i = 0; i < 8; i++) {\r\n            let peça: IPeça = new Peça(\"Peó\", \"negre\", \"./assets/Imatges/\" + IMG[11].n_pawn);\r\n            this.caselles[1][i].peca = peça;\r\n        }\r\n\r\n        // Torre blanca\r\n        peca = new Peça(\"Torre\", \"blanc\", \"./assets/Imatges/\" + IMG[0].b_tower);\r\n        this.caselles[7][0].peca = peca;\r\n        this.caselles[7][7].peca = peca;\r\n\r\n        // Cavall blanc\r\n        peca = new Peça(\"Cavall\", \"blanc\", \"./assets/Imatges/\" + IMG[1].b_horse);\r\n        this.caselles[7][1].peca = peca;\r\n        this.caselles[7][6].peca = peca;\r\n\r\n        // Alfil blanc\r\n        peca = new Peça(\"Alfil\", \"blanc\", \"./assets/Imatges/\" + IMG[2].b_bishop);\r\n        this.caselles[7][2].peca = peca;\r\n        this.caselles[7][5].peca = peca;\r\n\r\n        // Reina blanca\r\n        peca = new Peça(\"Reina\", \"blanc\", \"./assets/Imatges/\" + IMG[3].b_queen);\r\n        this.caselles[7][3].peca = peca;\r\n\r\n\r\n        // Rei blanc\r\n        peca = new Peça(\"Rei\", \"blanc\", \"./assets/Imatges/\" + IMG[4].b_king);\r\n        this.caselles[7][4].peca = peca;\r\n\r\n        // Peó blanc\r\n        for (let i = 0; i < 8; i++) {\r\n            let peça: IPeça = new Peça(\"Peó\", \"blanc\", \"./assets/Imatges/\" + IMG[5].b_pawn);\r\n            this.caselles[6][i].peca = peça;\r\n        }\r\n    }\r\n\r\n    static rotate(): Taulell {\r\n\r\n        let taulellRotate = new Taulell();\r\n\r\n        taulellRotate.caselles.reverse();\r\n        for (let i = 0; i < taulellRotate.caselles.length; i++) {\r\n            taulellRotate.caselles[i].reverse();\r\n        }\r\n        taulellRotate.lletres.reverse();\r\n        taulellRotate.numeros.reverse();\r\n\r\n        return taulellRotate;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}